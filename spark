#!/bin/bash
# run the following line to execute this script:
# bash <(curl -sSL https://loganhillyer.me/spark)


echo "Welcome to Logan's world renowned computer configuration system!"

uname_value=$(uname)
echo $uname_value
# trying to get mac, fedora or debian
if [ $uname_value = "Linux" ]; then
  os=linux
  platform=$(cat /etc/os-release | grep "^ID=" | cut -d'=' -f2)
elif [ $uname_value = "Darwin" ]; then
  os=mac
  platform=mac
else
  echo "unrecognized platorm"
fi

echo $os
echo $platform


# KISS

#base_url="https://loganhillyer.me"
base_url="https://raw.githubusercontent.com/12to-the12/spark/main"
url=$base_url/utils
# this is a bashism
# . <(curl -sSL $url)

# curl -sSL "$url" | sh
temp_file=$(mktemp)
curl -sSL "$url" > "$temp_file"
. "$temp_file"
rm "$temp_file"

echo grabbed
echo "platform: $platform"


set_install_flag "critical_apps"
#set_install_flag "gui_enviroment"
#set_install_flag "gui_app_bundle"
#set_install_flag "cli_utilities"
#set_install_flag "dev_tools" 
#set_install_flag "NVIDIA_support"
#set_install_flag "media_server"
#set_install_flag "gaming_bundle"
#set_install_flag "blender_workflow_bundle"


echo "configuration built! No more user input is needed, installing now..."


# upgrade system to current
# note: brew is not installed by default on MacOs
case "$platform" in
  fedora)
    echo "<upgrading fedora>"
    #sudo dnf upgrade --assumeyes; flatpak upgrade
    install(){
      sudo dnf install --assumeyes $@
    }
    ;;
  raspbian)
    echo "<upgrading raspbian>"
    #sudo apt update && sudo apt upgrade -y
    ;;
  mac)
    sudo softwareupdate -i -a
    ;;
  *)
    echo "ERROR: THIS SHOULD NEVER HAPPEN";;
esac



if [ $critical_apps ]; then
  echo "<installing critical apps>"
  case "$platform" in
    fedora)
      echo install neofetch;;
    raspbian)
      echo "installing for raspbian"
  esac
else
  echo "not installing critical_apps"
fi


